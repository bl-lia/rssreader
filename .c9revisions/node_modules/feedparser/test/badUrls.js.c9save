{"ts":1364031010814,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"describe('feedparser', function(){\n\n  describe('.parseUrl should throw on bad or null urls', function () {\n\n    describe('null url', function(){\n      it('should throw', function() {\n        assert.throws(function () {\n          FeedParser.parseUrl(null);\n        }, function (e) {\n          return (e instanceof Error && /Invalid URL/.test(e.message));\n        });\n      });\n    });\n\n    describe('bad url', function(){\n      it('should throw', function() {\n        assert.throws(function () {\n          FeedParser.parseUrl('ftp://foobar');\n        }, function (e) {\n          return (e instanceof Error && /Invalid URL/.test(e.message));\n        });\n      });\n    });\n\n    describe('null object.uri', function(){\n      it('should throw', function() {\n        assert.throws(function () {\n          FeedParser.parseUrl({ uri: null });\n        }, function (e) {\n          return (e instanceof Error && /Invalid URL/.test(e.message));\n        });\n      });\n    });\n\n    describe('null object.url', function(){\n      it('should throw', function() {\n        assert.throws(function () {\n          FeedParser.parseUrl({ url: null });\n        }, function (e) {\n          return (e instanceof Error && /Invalid URL/.test(e.message));\n        });\n      });\n    });\n\n    describe('bad object.uri string', function(){\n      it('should throw', function() {\n        assert.throws(function () {\n          FeedParser.parseUrl({ uri: 'ftp://foobar' });\n        }, function (e) {\n          return (e instanceof Error && /Invalid URL/.test(e.message));\n        });\n      });\n    });\n\n    describe('bad object.uri object', function(){\n      it('should throw', function() {\n        assert.throws(function () {\n          FeedParser.parseUrl({ uri: { nothref: 'http://foobar.com' } });\n        }, function (e) {\n          return (e instanceof Error && /Invalid URL/.test(e.message));\n        });\n      });\n    });\n\n    describe('bad object.url string', function(){\n      it('should throw', function() {\n        assert.throws(function () {\n          FeedParser.parseUrl({ url: 'ftp://foobar' });\n        }, function (e) {\n          return (e instanceof Error && /Invalid URL/.test(e.message));\n        });\n      });\n    });\n\n    describe('bad object.url object', function(){\n      it('should throw', function() {\n        assert.throws(function () {\n          FeedParser.parseUrl({ url: { nothref: 'http://foobar.com' } });\n        }, function (e) {\n          return (e instanceof Error && /Invalid URL/.test(e.message));\n        });\n      });\n    });\n\n  });\n});\n"]],"start1":0,"start2":0,"length1":0,"length2":2539}]],"length":2539}
