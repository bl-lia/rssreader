{"ts":1363955152147,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"var feedparser = require('feedparser')\n    , mongoose = require('mongoose')\n    , schema   = require('./schema');\n    \nmongoose.connect('mongodb://localhost/rssreader');\n\nfunction Reader(){\n}\n\nReader.test = function(){\n  console.log('aaa');  \n};\n\nReader.read = function(){\n    feedparser.parseUrl('feeds.gawker.com/gizmodo/full',\n        function(error, meta, articles){\n            if(error) console.error(error);\n            else{\n                console.log('%s - %s - %s', meta.title, meta.link, meta.xmlUrl);\n                articles.forEach(function(article){\n                    console.log(\"%s - %s(%s)\", article.date, article.title, article.link);\n                });\n            }\n        });\n};\n\nReader.save = function(name){\n    var db = mongoose.connection;\n    db.on('error', console.error.bind(console, 'connection error:'));\n    db.once('open', function(){\n        var Feed = mongoose.model('Feed');\n        var feed = new Feed({name: name});\n        feed.save(function(){\n            console.log('success');\n        });\n    });\n};\n\nReader.load = function(callback){\n    console.log(\"Call Reader.load\");\n    var Feed = mongoose.model('Feed');\n    Feed.find(function(err, feeds){\n        callback(feeds);\n    });\n};\n\nReader.addFeed = function(url, callback){\n    feedparser.parseUrl(url,\n        function(error, meta, articles){\n            if(error) console.error(error);\n            else{\n                var Feed = mongoose.model('Feed');\n                var feed = new Feed({\n                    name: meta.title,\n                    link: meta.link,\n                    xmlUrl: meta.xmlUrl\n                });\n                \n                console.log('Add feed. %s - %s - %s', meta.title, meta.link, meta.xmlUrl);\n                \n                feed.save(function(){\n                    console.log('Success to save feed.');\n                    callback(feed);\n                });\n            }\n        });\n};\n\nReader.getFeedArticles = function(url, callback){\n    feedparser.parseUrl(url,\n        function(error, meta, articles){\n            if(error) console.error(error);\n            else callback(articles);\n        });\n};\n\nexports = module.exports = Reader;"]],"start1":0,"start2":0,"length1":0,"length2":2188}]],"length":2188}
{"contributors":[],"silentsave":false,"ts":1363956323693,"patch":[[{"diffs":[[0,"               \n"],[1,"                articles.forEach(function(article){\n                    feed.item.push(article);\n                });\n                \n"],[0,"                "]],"start1":1631,"start2":1631,"length1":32,"length2":166}]],"length":2322,"saved":false}
{"contributors":[],"silentsave":false,"ts":1364030166555,"patch":[[{"diffs":[[0," Feed({\n"],[1,"                    _id: new mongoose.Types.ObjectId,\n"],[0,"        "]],"start1":1487,"start2":1487,"length1":16,"length2":70},{"diffs":[[0,"a.xmlUrl"],[1," !== null ? meta.xmlUrl : url"],[0,"\n       "]],"start1":1655,"start2":1655,"length1":16,"length2":45},{"diffs":[[0,"    "],[-1,"articles.forEach(function(article){\n                    feed.item.push("],[1,"console.log('Add feed. %s - %s - %s', meta.title, meta.link, meta.xmlUrl);\n                \n                feed.save(function(err, f){\n                    if(err) console.error(err);\n                    else{\n                        console.log('Success to save feed.');\n                        callback(f, "],[0,"article"],[1,"s"],[0,");\n "]],"start1":1742,"start2":1742,"length1":86,"length2":324},{"diffs":[[0,"                "],[-1,"});"],[1,"    }"],[0,"\n               "]],"start1":2065,"start2":2065,"length1":35,"length2":37},{"diffs":[[0,"                "],[1,"});"],[0,"\n               "]],"start1":2087,"start2":2087,"length1":32,"length2":35},{"diffs":[[0,"    "],[-1,"    console.log('Add feed. %s - %s - %s', meta.title, meta.link, meta.xmlUrl);\n                \n                feed.save(function(){"],[1,"}\n        });\n};\n\nReader.addArticles = function(feed, articles, callback){\n    console.log('reader.js:Reader.addArticles:');\n    articles.forEach(function(article){\n        var Article = mongoose.model('Article');\n        var a = new Article({\n            feedId:         feed._id,\n            date:           article.date,"],[0,"\n   "]],"start1":2115,"start2":2115,"length1":141,"length2":331},{"diffs":[[0,"date,\n          "],[1,"  title:"],[0,"          consol"]],"start1":2437,"start2":2437,"length1":32,"length2":40},{"diffs":[[0,"    "],[-1,"console.log('Success to save feed.');\n                    callback(feed"],[1,"article.title,\n            description:    article.description,\n            summary:        article.summary,\n            link:           article.link\n        }"],[0,");\n "]],"start1":2467,"start2":2467,"length1":79,"length2":167},{"diffs":[[0,"    "],[1,"\n"],[0,"        "],[-1,"});\n            }\n        }"],[1,"a.save();\n    });\n};\n\nReader.getFeedArticles = function(feedId, callback){\n    console.log('reader.js:Reader.getFeedArticles:feedId=%s', feedId);\n    var Article = mongoose.model('Article');\n    Article.find({feedId: new mongoose.Types.ObjectId(feedId)}, callback"],[0,");\n}"]],"start1":2637,"start2":2637,"length1":43,"length2":280},{"diffs":[[0,";\n};\n\nReader.get"],[-1,"Feed"],[1,"New"],[0,"Articles = funct"]],"start1":2914,"start2":2914,"length1":36,"length2":35},{"diffs":[[0,"  });\n};"],[-1,""],[1,"\n\n"],[0,"\n\nexport"]],"start1":3126,"start2":3126,"length1":16,"length2":18}]],"length":3172,"saved":false}
